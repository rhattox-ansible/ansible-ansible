- name: Install required system packages (python3, pip, venv)
  apt:
    name:
      - python3
      - python3-pip
      - python3-venv
      - python3-full
    state: present
    update_cache: true

- name: Create Python virtual environment for Ansible
  ansible.builtin.command: python3 -m venv {{ venv_path }}
  args:
    creates: "{{ venv_path }}/bin/activate"

- name: Upgrade pip in the Ansible virtual environment
  ansible.builtin.command: "{{ venv_path }}/bin/pip install --upgrade pip"

- name: Install or upgrade Ansible in the virtual environment
  ansible.builtin.command: "{{ venv_path }}/bin/pip install --upgrade ansible"

- name: Install kubernetes Python package in the virtual environment
  ansible.builtin.command: "{{ venv_path }}/bin/pip install kubernetes"

- name: Install jsonpatch Python package in the virtual environment
  ansible.builtin.command: "{{ venv_path }}/bin/pip install jsonpatch"

- name: Install PyYAML Python package in the virtual environment
  ansible.builtin.command: "{{ venv_path }}/bin/pip install PyYAML"

- name: Retrieve installed Ansible version from virtual environment
  ansible.builtin.command: "{{ venv_path }}/bin/ansible --version"
  register: ansible_version_output

- name: Output installed Ansible version
  ansible.builtin.debug:
    msg: "{{ ansible_version_output.stdout_lines }}"

#
# Install Ansible collections
#

- name: Install ansible.posix collection via ansible-galaxy
  ansible.builtin.command: ansible-galaxy collection install ansible.posix

- name: Install community.kubernetes collection via ansible-galaxy
  ansible.builtin.command: ansible-galaxy collection install community.kubernetes

#
# Ansible configuration
#

- name: Ensure /etc/ansible directory exists
  ansible.builtin.file:
    path: "/etc/ansible/"
    state: directory
    mode: "0755"

- name: Generate /etc/ansible/ansible.cfg from template
  ansible.builtin.template:
    src: ansible_cfg.j2
    dest: "/etc/ansible/ansible.cfg"
    mode: "0644"
